{
  "openapi": "3.0.3",
  "info": {
    "title": "Authentication API",
    "description": "An API to authenticate users and manage their credentials.\n\nSource code: [Authentication API repository](https://github.com/nataelienai/authentication-api)",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000/",
      "description": "API development server"
    }
  ],
  "tags": [
    {
      "name": "authentication",
      "description": "Access management"
    },
    {
      "name": "user",
      "description": "Operations on user information"
    }
  ],
  "paths": {
    "/sign-up": {
      "post": {
        "tags": ["authentication"],
        "summary": "Create a user",
        "description": "Creates a user and session and returns them",
        "requestBody": {
          "description": "User credentials to be created",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCredentials"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "User and session created and returned successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "$ref": "#/components/schemas/User"
                    },
                    "session": {
                      "$ref": "#/components/schemas/Session"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid or missing request body or headers",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "The email has already been taken",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/sign-in": {
      "post": {
        "tags": ["authentication"],
        "summary": "Sign user into the system",
        "description": "Creates a session and returns the user and its session",
        "requestBody": {
          "description": "User credentials to be used",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCredentials"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User and session returned successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "$ref": "#/components/schemas/User"
                    },
                    "session": {
                      "$ref": "#/components/schemas/Session"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid or missing request body or headers",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Incorrect password",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/sign-out": {
      "post": {
        "tags": ["authentication"],
        "summary": "Sign out of the current user session",
        "description": "Deletes the current user session",
        "responses": {
          "204": {
            "description": "Signed out successfully"
          },
          "400": {
            "description": "Invalid or missing request body or headers",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Invalid access token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/refresh-access-token": {
      "post": {
        "tags": ["authentication"],
        "summary": "Refresh the current user session",
        "description": "Creates new access and refresh tokens for the session and returns them",
        "requestBody": {
          "description": "Refresh token to be used",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "refreshToken": {
                    "type": "string",
                    "description": "Session refresh token",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjA5ODc2NTQzMjEiLCJpYXQiOjE1MTYyMzkwMjJ9.yTPZ8GF7hKTbfR1TfeWljqT_yvGWaB5Ug4_CUsBoSJ4"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Session refreshed and returned successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "session": {
                      "$ref": "#/components/schemas/Session"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid or missing request body or headers",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Invalid refresh token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/user": {
      "get": {
        "tags": ["user"],
        "summary": "Retrieve signed in user information",
        "description": "Returns the signed in user information",
        "responses": {
          "200": {
            "description": "User retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid or missing request body or headers",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Invalid access token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      },
      "delete": {
        "tags": ["user"],
        "summary": "Delete the signed in user",
        "description": "Deletes the signed in user",
        "responses": {
          "204": {
            "description": "User deleted successfully"
          },
          "400": {
            "description": "Invalid or missing request body or headers",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Invalid access token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/user/email": {
      "patch": {
        "tags": ["user"],
        "summary": "Update signed in user email",
        "description": "Updates the signed in user email",
        "requestBody": {
          "description": "New user email",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "New user email",
                    "example": "updated_user@email.com"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Email updated successfully"
          },
          "400": {
            "description": "Invalid or missing request body or headers",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Invalid access token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/user/password": {
      "patch": {
        "tags": ["user"],
        "summary": "Update signed in user password",
        "description": "Updates the signed in user password",
        "requestBody": {
          "description": "New user password",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "password": {
                    "type": "string",
                    "format": "password",
                    "description": "New user password",
                    "example": "another_strong_password123"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Password updated successfully"
          },
          "400": {
            "description": "Invalid or missing request body or headers",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Invalid access token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    }
  },
  "components": {
    "schemas": {
      "UserCredentials": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "User email",
            "example": "user@email.com"
          },
          "password": {
            "type": "string",
            "format": "password",
            "description": "User password",
            "example": "my_strong_password123"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "User id",
            "example": "64bee56b-5319-4179-883a-e3592b54f3df"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "User email",
            "example": "user@email.com"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "User creation date and time",
            "example": "2023-06-27T20:43:12Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last user update date and time",
            "example": "2023-06-28T09:12:43Z"
          }
        }
      },
      "Session": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "description": "Session access token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjEyMzQ1Njc4OTAiLCJpYXQiOjE1MTYyMzkwMjJ9.Y4rwScILgHeZNmE4cWtTX524mg55VZEn10awsxDHpNo"
          },
          "refreshToken": {
            "type": "string",
            "description": "Session refresh token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjA5ODc2NTQzMjEiLCJpYXQiOjE1MTYyMzkwMjJ9.yTPZ8GF7hKTbfR1TfeWljqT_yvGWaB5Ug4_CUsBoSJ4"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Error description"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "description": "JWT Authentication",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
